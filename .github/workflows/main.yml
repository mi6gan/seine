name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - run: yarn
      - run: yarn build
      - run: yarn test:eslint
      - run: yarn test:jest
      - run: |
          yarn start-storybook --quiet --ci -p 3000 &
          yarn wait-on http://localhost:3000
          yarn cypress run
        working-directory: storybook/

      - run: yarn build-storybook --quiet --loglevel warn -o ../docs
        working-directory: storybook/

      - uses: actions/upload-artifact@v2
        with:
          name: cypress
          path: |
            storybook/cypress/snapshots
            storybook/cypress/videos

      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: packages/**/index.*

      - uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs

  deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cypress
          path: storybook/cypress

      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: packages

      - uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'

      - name: Release version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GIT_EMAIL}"
          yarn workspaces foreach -t version patch
          yarn workspaces foreach -t --include='@seine/*' exec npm publish
          git add docs
          git commit -am "Release $(node -p -e "require('./package.json').version")"
          git push -f origin HEAD:latest
