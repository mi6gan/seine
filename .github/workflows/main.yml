name: Main

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn

      - name: Build sources
        run: yarn build

      - name: Run eslint tests
        if: ${{ github.event_name == 'pull_request' }}
        run: yarn test:eslint

      - name: Run unit tests
        if: ${{ github.event_name == 'pull_request' }}
        run: yarn test:jest

      - name: Run integration tests
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          yarn start-storybook --quiet --ci -p 3000 &
          yarn wait-on http://localhost:3000
          yarn cypress run
        working-directory: storybook/

      - name: Upload artifacts
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress
          path: |
            storybook/cypress/snapshots/
            storybook/cypress/videos/

      - name: Release version
        if: ${{ github.event_name == 'push' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GIT_EMAIL}"
          yarn workspaces foreach -t version patch
          yarn release
          git add docs
          git commit -am "Release $(node -p -e "require('./package.json').version")"
          git push -f origin HEAD:latest
