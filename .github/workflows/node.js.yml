# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Add last commit message to environment
        run: echo "::set-env name=need_build::$(if [[ $(git log -1 --pretty=%B) =~ ^Release\ .+$ ]]; then echo 'n'; else echo 'y'; fi)"

      - name: Cache node modules
        if: ${{ env.need_build == 'y' }}
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            .yarn/cache
            .yarn/build-state.yml
            .yarn/install-state.gz
            node_modules/.cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ env.need_build == 'y' }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        if: ${{ env.need_build == 'y' }}
        run: yarn

      - name: Build sources
        if: ${{ env.need_build == 'y' }}
        run: yarn build

      - name: Run all tests
        if: ${{ env.need_build == 'y' }}
        run: yarn test

      - name: Release version
        if: ${{ env.need_build == 'y' && github.event_name == 'push' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GIT_EMAIL}"
          yarn workspaces foreach -t version prerelease
          git commit -am "Release $(node -p -e "require('./packages/core/package.json').version")"
          yarn workspaces foreach -t --exclude seine exec npm publish --tag next
          git push -f origin HEAD:next

